{% extends "::index.html.twig" %}
{% block title %}JEWEL STREET:SELLER REGISTRATION{% endblock %}
{% block jsscript %}
	
    
	<script type='text/javascript'>
            function isNumber(evt) {
                evt = (evt) ? evt : window.event;
                var charCode = (evt.which) ? evt.which : evt.keyCode;
                if (charCode > 31 && (charCode < 48 || charCode > 57)) {
                    return false;
                }
                return true;
            }
            function isIpNumber(evt) {
                evt = (evt) ? evt : window.event;
                var charCode = (evt.which) ? evt.which : evt.keyCode;
                if ((charCode == 46 || charCode == 8) || (charCode > 47 && charCode < 58)) {
                    return true;
                }
                return false;
            }
	$(document).ready(function(){              
	$("#form_officesId").removeAttr("required");
	$.validator.setDefaults({
			ignore: []
		});
		$("#form_username").blur(function(){
			var user = $("#form_username").val();
                        if($.trim(user).length > 7) {
			$.ajax({
						url: "{{ path('username_finding') }}",
						type:"POST",
				        datatype:"json",
						data:{user: user},
						success: function(res){	
							if(res==1)
							{
                                                            {% image 'bundles/goldtaskapp/images/cancel.png' %}
                                                                var imgpath = 'Username is not available <img src="{{ asset_url }}">';
                                                            {% endimage %}
								
								$("#uerror").html(imgpath);
								$("#form_username").val('');
                                                                $("#uerror").css("display", "inline-block");
                                                                $("#uerror").css("color", "red");
                                                                $( "#uerror" ).fadeOut( 5000 );
							}
							else
							{
                                                            {% image 'bundles/goldtaskapp/images/checked.gif' %}
                                                                var imgpath = 'Username is available <img src="{{ asset_url }}">';
                                                            {% endimage %}
								$("#uerror").html(imgpath);
                                                                $("#uerror").css("display", "inline-block");
                                                                $("#uerror").css("color", "green");
                                                                $( "#uerror" ).fadeOut( 5000 );
							}
	                    }
				});
                                }
		});
		
		$("#form_email").blur(function()
		{
			var email = $("#form_email").val();
                        if($.trim(email).length > 7) {
			$.ajax({
						url: "{{ path('username_email_finding') }}",
						type:"POST",
				        datatype:"json",
						data:{email: email},
						success: function(res)
						{	
							if(res==1)
							{
                                                            {% image 'bundles/goldtaskapp/images/cancel.png' %}
                                                                var imgpath = 'Email id is not available <img src="{{ asset_url }}">';
                                                            {% endimage %}
								$("#em_error").html(imgpath);
								$("#form_email").val('');
                                                                $("#em_error").css("display", "inline-block");
                                                                $("#em_error").css("color", "red");
                                                                $( "#em_error" ).fadeOut( 5000 );
							}
							else
							{
                                                            {% image 'bundles/goldtaskapp/images/checked.gif' %}
                                                                var imgpath = 'Email id is available <img src="{{ asset_url }}">';
                                                            {% endimage %}
								$("#em_error").html(imgpath);
                                                                $("#em_error").css("display", "inline-block");
                                                                $("#em_error").css("color", "green");
                                                                $( "#em_error" ).fadeOut( 5000 );
							}
	                    }
				}); 
                                }
		});
		$("#form_userRoleId").change(function(){
			var managerid = $("#form_userRoleId").val();	
            var calls_list='';		
			$.ajax({
						url: "{{ path('managerslist') }}",
						type:"POST",
				        datatype:"json",
						data:{managerid: managerid},
						success: function(res)
						{
						   calls_list+="<option value='0'>Select ParentRole</option>";
						   if(res.length==2)
						   {
								$("#form_parentRoleId").html("");							
						   }
						   else
						   {
								$.each($.parseJSON(res),function(key,value)
								{	    						
									calls_list+="<option value="+value.id+">"+value.name+"</option>";			 			
								});																
							}
							$("#form_parentRoleId").html(calls_list);
	                    }
				});  
			
		
		}); 		
   });
   
  {# $(function() {
        $('#form_officesId').multipleSelect({
           placeholder: "Select Office(s)"
       });
   }); #}

	$(function() {
        $.validator.addMethod("password", function(value, element) {
            return this.optional(element) || value == value.match(/^(?=.*\d)(?=.*[^a-zA-Z\d])(?=.*[a-zA-Z]).{6,}$/);
        });
		
		$.validator.addMethod("alpha", function(value, element) {
				return this.optional(element) || value == value.match(/^[a-zA-Z ]*$/);
			});
			
        $.validator.addMethod("ipaddress", function(value, element) {
				return this.optional(element) || value == value.match(/^(?!0)(?!.*\.$)(?:[0-9]{1,3}\.){3}[0-9]{1,3}$/);
			});
			
        $('#form_sample_1').validate({
            // Specify the validation rules
             //alert("hello");
			 errorElement: 'span',
			 errorPlacement: function(error, element) {
				if (element.attr("name") == "selectItemform[officesId][]" ) {
				error.insertAfter("#uofficeerror");
				}else {
				error.insertAfter(element);
				}
				},
            rules: {
				'form[officesId][]': {
						required: true
				},
                'form[username]': {
                    required: true,
					alpha: true,
				    minlength: 8,
                    maxlength: 15
				},
				'form[password]': {
                    required: true,
					password: true,
				    minlength: 8,
                    maxlength: 15
				},
				'form[userRoleId]': {
                    required: true,
					range: [1, 23]
                },
				'form[parentRoleId]': {
                    required: true,
					range: [1, 1000]
                },
				'form[firstName]': {
                    required: true,
					alpha: true
                },
				'form[lastName]': {
                    required: true,
					alpha: true
                },
				'form[ipAddress]': {
						required: false,
						ipaddress: true
				},
				'form[email]': {
                    required: true,
					email: true
                },
				
				 'form[mobile]': {
                   required: true,
                   minlength: 10,
                    maxlength: 10
               },			
				'form[address]': {
                    required: true,
				    minlength: 8,
                    maxlength: 50
                },
				'form[city]': {
                    required: true,
					alpha: true,
				    minlength: 5,
                    maxlength: 15
				},
				'form[state]': {
                    required: true,
					range: [1, 23]
				}
				
				
            },
            messages: {
			'form[officesId][]': {
						required: "Please Select Office"
			},
			'form[username]':{
                    required: "Please provide user name.",
					alpha: "Please Enter only alphabets.",
                    minlength: "Your user name must be at least 8 characters long",
					maxlength: "Your user name must not exceed 15 characters long"
		   },
		   'form[password]':{
                    required: "Please provide password.",
					password: "Your password must contain atleast one number and special character .",
                    minlength: "Your password must be at least 8 characters long",
					maxlength: "Your password must not exceed 15 characters long"
		   },
		   'form[userRoleId]':{
                    required: "Please select role.",
					range: " Select a valid Role"
                    
            },
			'form[parentRoleId]':{
			
                    required: "Please select parentRole.",
					range: " Select a valid Parent Role"
                    
            },
            'form[firstName]':{
                    required: "Please provide first name.",
					alpha: "Please Enter only alphabets.",
                    minlength: "Your first name must be at least 8 characters long",
					maxlength: "Your first name must not exceed 15 characters long"
		   },
		   'form[lastName]':{
                    required: "Please provide last name.",
					alpha: "Please Enter only alphabets.",
                    minlength: "Your last name must be at least 8 characters long",
					maxlength: "Your last name must not exceed 15 characters long"
		   },
		   'form[ipAddress]': {
						required: "Please enter office IP address.",
						ipaddress: "Please enter valid IP address."
			},
		   'form[email]':{
                    required: "Please provide email."
					
		   },
		   
		   'form[mobile]':{
                    required: "Please provide mobile number.",					
                    minlength: "Your mobile number must be at least 10 numeric values long",
					maxlength: "Your mobile number must not exceed 10 numeric values long"
		    },
		   
			'form[address]':{
                    required: "Please provide address.",
                    minlength: "Your address must be at least 8 characters long",
					maxlength: "Your address must not exceed 50 characters long"
            },
			'form[city]':{
                    required: "Please provide city name.",
					alpha: "Please Enter alphabets.",
                    minlength: "Your city name must be at least 5 characters long",
					maxlength: "Your city name must not exceed 15 characters long"
		    },
			'form[state]':{
                    required: "Please select state.",
					range: " Select a valid State"
             }       
            },
            submitHandler: function(form) {
                form.submit();
            }
		});
 });

    </script>
	 <style >
        .error{color:red;font-size:14px;margin-left: 15px;}
        .form-control {float:left !important; width:300px;margin-left: 13px; margin-top: -7px;}
        .col-xs-5{width: 100%}
		.ms-choice{margin: -3px 0px 0px -7px !important;width: 105% !important;}
</style>
{% endblock %}
{% block bodyheader %}
	<section class="content-header">
		<h1>User</h1>
		<ol class="breadcrumb">
			<li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
			<li><a href="#"> Seller</a></li>
			<li class="active">Register</li>
		</ol>
	</section>
<!-- Main content -->
	<section class="content">	
		<div class="row">
			<div class="col-xs-12">
				<div class="box">
					<div class="box-header">
						<h3 class="box-title">Register</h3>
						<div class="muted pull-left" style="float:right !important;padding-top:10px !important;padding-right:10px !important;"><a class="btn btn-primary" href="{{ path('userslist') }}" style="color:white !important;"><i class="fa fa-arrow-left"></i>Back</a></div>
					</div><!-- /.box-header -->					
					{{ form_start(form, { 'attr': { 'role': 'form','id': 'form_sample_1', 'class': 'form-horizontal', 'accept-charset':'UTF-8', 'autocomplete':'off', validate: 'validate' } }) }}						
						<div class="box-body">
							<p class="margin">Username<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.username,{'attr': {'class': 'form-control','maxlength': '15'} }) }}
                                                                        <span id="uerror"></span></div>
							</div>							
							<p class="margin">Password<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.password,{'attr': {'class': 'form-control'} }) }}
								</div>
							</div>
							<p class="margin">Role<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.userRoleId,{'attr': {'class': 'form-control'} }) }}
								</div>
							</div>
							<p class="margin">Parent Role<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.parentRoleId,{'attr': {'class': 'form-control'} }) }}
								</div>
							</div>
							<p class="margin">Offices<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.officesId,{'attr': {'class': 'form-control'} }) }}
									<span class="help-inline" id="uofficeerror"></span>
								</div>
							</div>
							<p class="margin">IP Address</p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.ipAddress,{'attr': {'class': 'form-control','onkeypress':'return isIpNumber(event)'} }) }}
								</div>
							</div>
							<p class="margin">Firstname<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.firstName,{'attr': {'class': 'form-control','maxlength': '15'} }) }}
								</div>
							</div>
							<p class="margin">Lastname<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.lastName,{'attr': {'class': 'form-control','maxlength': '15'} }) }}
								</div>
							</div>
							<p class="margin">Email<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.email,{'attr': {'class': 'form-control'} }) }}
                                                                 <span id="em_error"></span></div>
							</div>
							<p class="margin">Mobile<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.mobile,{'attr': {'class': 'form-control','maxlength': '10','onkeypress':'return isNumber(event)'} }) }}
								</div>
							</div>
							<p class="margin">Address<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.address,{'attr': {'class': 'form-control','maxlength': '50'} }) }}
								</div>
							</div>
							<p class="margin">City<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.city,{'attr': {'class': 'form-control','maxlength': '15'} }) }}
								</div>
							</div>
							<p class="margin">State<span class="required">*</span></p>						
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.state,{'attr': {'class': 'form-control'} }) }}
								</div>
							</div>							
							<div class="form-group">								
								 <div class="col-xs-5">
									{{ form_widget(form.register,{'attr': {'class': 'btn btn-primary'}} ) }}
									
								</div>
							</div>	
                        </div>							
					{{ form_end(form) }}				
				</div>
			</div>
		</div>
	</section>
{% endblock %}

